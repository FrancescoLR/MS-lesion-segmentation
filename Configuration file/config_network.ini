[MP2RAGE]
csv_file = MP2RAGE.csv
spatial_window_size = (88, 88, 88)
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)
interp_order = 1

[FLAIR]
csv_file = FLAIR.csv
spatial_window_size = (88, 88, 88)
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)
interp_order = 1

[GT]
csv_file = GT.csv
spatial_window_size = (48, 48, 48)
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)
interp_order = 0

[W]
csv_file = WEIGHTS.csv
spatial_window_size = (48,48,48)
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)
interp_order = 0

[S]
csv_file = SAMPLE.csv
spatial_window_size = (48, 48, 48)
pixdim = (1.0, 1.0, 1.0)
axcodes=(A, R, S)
interp_order = 0


[SYSTEM]
cuda_devices = 0
num_threads = 8
num_gpus = 1
model_dir = ./models/BestModel
dataset_split_file = split.csv #Same directory as BestModel

[NETWORK]
name = niftynet.network.unet_unpadded.UNet3D_3levels
activation_function = prelu
batch_size = 2
decay = 0.0001
keep_prob = 0.5
reg_type = L2
# volume level preprocessing
volume_padding_size = 10
# histogram normalisation
#histogram_ref_file = ./example_volumes/monomodal_parcellation/standardisation_models.txt
norm_type = percentile
cutoff = (0.01, 0.99)
normalisation = False
whitening = True
percentile_normalisation = False
normalise_foreground_only=False
#intensity_augmentation = True
#foreground_type = otsu_plus
#multimod_foreground_type = and
queue_length = 128
window_sampling = balanced

[TRAINING]
sample_per_volume = 32
#rotation_angle = (-10.0,10.0)
rotation_angle_z = (-90.0,90.0)
scaling_percentage = (-5.0, 5.0)
random_flipping_axes= 0,1,2
loss_type = niftynet.layer.loss_segmentation.cross_entropy
lr = 1e-4
warmup = 2000
starting_iter = 0
save_every_n = 6000
tensorboard_every_n = 50
max_iter = 80000
max_checkpoints = 40
validation_every_n = -1
validation_max_iter = 1

[INFERENCE]
spatial_window_size = (108, 108, 108)
border = (20, 20, 20)
inference_iter = 80000
save_seg_dir = ./output
output_interp_order = 0
dataset_to_infer = inference

############################ custom configuration sections
[SEGMENTATION]
image = MP2RAGE,FLAIR
label = GT
sampler = S
weight_map = W
output_prob = True
num_classes = 2
label_normalisation = False
lr_step_size = 10000
lr_gamma = 0.5
